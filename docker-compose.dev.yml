# Development environment with local database
services:
  mysql-dev:
    image: mysql:8.0
    container_name: qr-mysql-dev
    env_file:
      - .env.docker.dev
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  api-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: qr-api-dev
    env_file:
      - ./backend/.env.dev
    environment:
      MYSQL_HOST: mysql-dev
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      mysql-dev:
        condition: service_healthy
    restart: unless-stopped

  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: qr-frontend-dev
    env_file:
      - ./frontend/.env.dev
    ports:
      - "3020:3020"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api-dev
    restart: unless-stopped

volumes:
  mysql_dev_data: