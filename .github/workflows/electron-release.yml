name: Build Electron App

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run build:electron
        working-directory: ./frontend
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Build Electron app (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:electron
        working-directory: ./frontend

      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run build:electron
        working-directory: ./frontend

      - name: Upload artifacts to release (macOS)
        if: matrix.os == 'macos-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            frontend/dist/*.dmg
            frontend/dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts to release (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            frontend/dist/*.deb
            frontend/dist/*.rpm
            frontend/dist/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts to release (Windows)
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            frontend/dist/*.exe
            frontend/dist/*.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}